@model CharacterBuilder.Models.Character.CharacterDetail

@{
    ViewData["Title"] = $"Details - {@Model.Name}";
    ViewData["CharacterID"] = Model.Id;
}

<div class="container col-10">
    <form class="pb-3" asp-action="Update">
        <div class="d-flex gap-2 pb-4">
            <div class="form-group flex-fill">
                @Html.DisplayNameFor(c => c.Name)
                @Html.TextBoxFor(c => c.Name, new {Class="form-control-lg"})
                <span asp-validation-for="Name"></span>
            </div>
            <div class="form-group flex-fill">
                @Html.HiddenFor(c => c.OwnerId)
                @Html.HiddenFor(c => c.OwnerName)
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(c => c.Level)
                @Html.TextBoxFor(c => c.Level, new {type="number", Class="form-control"})
                <span asp-validation-for="Level"></span>
            </div>
        </div>
        <div class="d-flex gap-2 pb-4">
            <div class="form-group flex-fill">
                @Html.HiddenFor(c => c.Id)
                @Html.DisplayNameFor(c => c.OwnerName)
                @Html.DisplayTextFor(c => c.OwnerName)
            </div>
        </div>
        
    @if (Model.CampaignId is not null && Model.CampaignName is not null)
    {
        <div class="form-group pb-2">
            @Html.DisplayNameFor(c => c.CampaignName)
            @Html.DisplayTextFor(c => c.CampaignName)
        </div>
    }
        <div class="d-flex flex-row justify-content-evenly pb-2">
            <div class="form-group flex-col">
                @Html.DisplayNameFor(c => c.Height)
                @Html.TextBoxFor(c => c.Height, new {Class="form-control flex-grow-1"})
                <span asp-validation-for="Height"></span>
            </div>
            <div class="form-group flex-col">
                @Html.DisplayNameFor(c => c.Weight)
                @Html.TextBoxFor(c => c.Weight, new {Class="form-control flex-grow-1"})
                <span asp-validation-for="Weight"></span>
            </div>
            <div class="form-group flex-col">
                @Html.DisplayNameFor(c => c.Age)
                @Html.TextBoxFor(c => c.Age, new {Class="form-control flex-grow-1"})
                <span asp-validation-for="Age"></span>
            </div>
        </div>
        <div class="d-flex justify-content-evenly pb-4">
            <div class="form-group">
                @Html.DisplayNameFor(c=>c.MindScore)
                @Html.TextBoxFor(c=>c.MindScore, new {type="number",Class="form-control"})
                <span asp-validation-for="MindScore"></span>
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(c => c.BodyScore)
                @Html.TextBoxFor(c => c.BodyScore, new {type="number",Class="form-control"})
                <span asp-validation-for="BodyScore"></span>
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(c => c.ResilienceScore)
                @Html.TextBoxFor(c => c.ResilienceScore, new {type="number",Class="form-control"})
                <span asp-validation-for="ResilienceScore"></span>
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(c => c.SoulScore)
                @Html.TextBoxFor(c => c.SoulScore, new {type="number",Class="form-control"})
                <span asp-validation-for="SoulScore"></span>
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(c => c.MovementScore)
                @Html.TextBoxFor(c => c.MovementScore, new {type="number",Class="form-control"})
                @Html.DisplayNameFor(c => c.CurrentMovementPoints)
                @Html.TextBoxFor(c => c.CurrentMovementPoints, new {type="number", Class="form-control"})
                <span asp-validation-for="MovementScore"></span>
            </div>
        </div>
        <div class="form-group">
            @* Add HP display stuff *@
            @Html.DisplayNameFor(c => c.CurrentHp)
            @Html.TextBoxFor(c => c.CurrentHp, new {type="number", Class="form-control"})
            @* Add Talent Point display stuff *@
            @Html.DisplayNameFor(c => c.CurrentTalentPoints)
            @Html.TextBoxFor(c => c.CurrentTalentPoints, new {type="number", Class="form-control"})
        </div>

        <div class="form-group pb-2">
            @Html.DisplayNameFor(c => c.WeaponProficiencies)
            @Html.TextAreaFor(c => c.WeaponProficiencies, new {rows="6",Class="form-control"})
            <span asp-validation-for="WeaponProficiencies"></span>
        </div>
        <div class="form-group h-auto">
            <input class="btn btn-primary" type="submit" value="Update Character Stats">
        </div>
    </form>
    <div class="container-fluid">
        <h2>Weapons</h2>
        <table class="table table-striped pb-4">
            <thead>
                <th>Name</th>
                <th>Low attack range</th>
                <th>High attack range</th>
                <th>Low Thrown range</th>
                <th>High Thrown range</th>
                <th>Attacking Stat</th>
                <th>Target Stat</th>
                <th>Is Two Handed</th>
                <th>Item Count</th>
                <th></th>
            </thead>
            <tbody>
                @foreach(var weapon in Model.Weapons)
                {
                    <tr>
                        <td>@weapon.Name</td>
                        <td>@weapon.LowAttackRange</td>
                        <td>@(weapon.HighAttackRange==null? "n/a" : weapon.HighAttackRange)</td>
                        <td>@(weapon.LowThrownRange==null? "n/a" : weapon.LowThrownRange)</td>
                        <td>@(weapon.HighThrownRange==null? "n/a" : weapon.HighThrownRange)</td>
                        <td>@weapon.AttackingStat</td>
                        <td>@weapon.TargetStat</td>
                        <td>@weapon.IsTwoHanded</td>
                        <td>
                            <form asp-controller="InventorySlot" asp-action="Update">
                                @Html.Hidden("SlotId",@weapon.SlotId)
                                @Html.Hidden("CharacterId",Model.Id)
                                <input class="col-2 form-control" name="ItemCount" type="number" value="@weapon.ItemCount">
                                <input class="btn btn-primary btn-sm" type="submit" value="Save Changes">
                            </form>
                        </td>
                        <td>
                            <a class="btn btn-danger" asp-action="Delete" asp-controller="InventorySlot" asp-route-id="@weapon.SlotId" asp-route-characterId="@Model.Id">Remove</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        
        <form class="row g-3 pb-5 d-flex justify-content-end" id="WeaponAddForm" asp-controller="InventorySlot" asp-action="Create">
            @Html.Hidden("CharacterId", Model.Id)
            <div class="col-8 form-group row">
                <div class="col-6">
                    <label>Add a weapon: </label>
                    <select class="form-select form-select-sm" name="WeaponId">
                    @foreach(var weapon in ViewBag.AllWeapons)
                    {
                        <option value="@weapon.Id">
                            @weapon.Name
                        </option>
                    }
                    </select>
                </div>
                <div class="form-group col-3">
                    <label for="ItemCount">Item Count</label>
                    <input type="number" name="ItemCount" value="1" class="form-control form-control-sm">
                </div>
                <div class="col-3 d-flex flex-col">
                    <input type="submit" value="Add weapon" class="btn btn-outline-primary btn-sm align-self-end">
                </div>
            </div>
        </form>
        <h2>Items</h2>
        <table class="table table-striped pb-3">
            <thead>
                <th>Name</th>
                <th>Description</th>
                <th>Item Count</th>
            </thead>
            <tbody>
                @foreach(var item in Model.Items)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Description</td>
                        <td>
                            <form asp-controller="InventorySlot" asp-action="Update">
                                @Html.Hidden("SlotId",@item.SlotId)
                                @Html.Hidden("CharacterId",Model.Id)
                                <input class="col-2 form-control" name="ItemCount" type="number" value="@item.ItemCount">
                                <input class="btn btn-primary btn-sm" type="submit" value="Save Changes">
                            </form>
                        </td>
                        <td><a class="btn btn-danger" asp-action="Delete" asp-controller="InventorySlot" asp-route-id="@item.SlotId" asp-route-characterId="@Model.Id">Remove</a></td>
                    </tr>
                }
            </tbody>
        </table>
        <form class="row g-3 pb-5 d-flex justify-content-end" id="ItemAddForm" asp-controller="InventorySlot" asp-action="Create">
            @Html.Hidden("CharacterId", Model.Id)
            <div class="col-8 form-group row">
                <div class="col-6">
                    <label>Add an item: </label>
                    <select class="form-select form-select-sm" name="ItemId">
                    @foreach(var item in ViewBag.AllItems)
                    {
                        <option value="@item.Id">
                            @item.Name
                        </option>
                    }
                    </select>
                </div>
                <div class="form-group col-3">
                    <label for="ItemCount">Item Count</label>
                    <input type="number" name="ItemCount" value="1" class="form-control form-control-sm">
                </div>
                <div class="col-3 d-flex flex-col">
                    <input type="submit" value="Add item" class="btn btn-outline-primary btn-sm align-self-end">
                </div>
            </div>
        </form>
    </div>
    @Html.ActionLink($"Delete {@Model.Name}","ConfirmDelete",new {id = Model.Id}, new {Class="btn btn-danger"})
</div>